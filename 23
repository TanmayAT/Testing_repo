import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { api } from '../services/api';
import { LogIn, Loader2, GraduationCap, MapPin, Users, Award } from 'lucide-react';
import { UserRole } from '../types';

export const Login: React.FC = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [role, setRole] = useState<UserRole>('student');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const { login } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      // The admin role is not selectable in the UI, but can be used via demo credentials
      const loginRole = email === 'admin@example.com' ? 'admin' : role;
      const { user, token } = await api.login(email, password, loginRole);
      login(user, token);
      
      switch (user.role) {
        case 'student':
          navigate('/student/dashboard');
          break;
        case 'tutor':
          navigate('/tutor/dashboard');
          break;
        case 'admin':
          navigate('/admin/dashboard');
          break;
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Invalid credentials');
    } finally {
      setLoading(false);
    }
  };

  const LeftPanel = () => (
    <div className="hidden lg:flex flex-col justify-between bg-gray-900 text-white p-12 relative overflow-hidden">
      <div 
        className="absolute inset-0 bg-cover bg-center opacity-10"
        style={{ backgroundImage: "url('https://images.unsplash.com/photo-1522202176988-66273c2fd55f?q=80&w=2071&auto=format&fit=crop')" }}
      ></div>
      <div className="relative z-10">
        <Link to="/" className="flex items-center space-x-2">
          <GraduationCap className="h-8 w-8 text-indigo-400" />
          <span className="text-2xl font-bold">Edvora</span>
        </Link>
      </div>
      <div className="relative z-10">
        <h1 className="text-4xl font-bold mb-4">
          Unlock Your Potential.
        </h1>
        <p className="text-gray-300 text-lg">
          Connect with the best tutors, right at your doorstep.
        </p>
      </div>
      <div className="relative z-10 grid grid-cols-3 gap-4 text-center">
        <div className="flex flex-col items-center">
          <MapPin className="h-6 w-6 text-indigo-400 mb-2" />
          <span className="text-sm">Local Tutors</span>
        </div>
        <div className="flex flex-col items-center">
          <Users className="h-6 w-6 text-indigo-400 mb-2" />
          <span className="text-sm">Expert Verified</span>
        </div>
        <div className="flex flex-col items-center">
          <Award className="h-6 w-6 text-indigo-400 mb-2" />
          <span className="text-sm">Top Rated</span>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-white flex">
      <LeftPanel />
      <div className="flex-1 flex flex-col justify-center items-center px-4 sm:px-6 lg:px-8 py-12">
        <div className="max-w-md w-full">
          <div className="text-left mb-8">
            <h2 className="text-3xl font-bold text-gray-900">Welcome Back</h2>
            <p className="text-gray-600 mt-2">Please enter your details to sign in.</p>
          </div>

          <div className="grid grid-cols-2 gap-4 mb-6">
            <button
              type="button"
              onClick={() => setRole('student')}
              className={`w-full px-4 py-3 rounded-lg border-2 font-semibold transition-all text-center ${
                role === 'student'
                  ? 'border-indigo-600 bg-indigo-50 text-indigo-700'
                  : 'border-gray-300 text-gray-700 hover:border-gray-400'
              }`}
            >
              Student
            </button>
            <button
              type="button"
              onClick={() => setRole('tutor')}
              className={`w-full px-4 py-3 rounded-lg border-2 font-semibold transition-all text-center ${
                role === 'tutor'
                  ? 'border-indigo-600 bg-indigo-50 text-indigo-700'
                  : 'border-gray-300 text-gray-700 hover:border-gray-400'
              }`}
            >
              Tutor
            </button>
          </div>

          {error && (
            <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4 text-sm">
              {error}
            </div>
          )}

          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
              <input
                type="email"
                required
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"
                placeholder="you@example.com"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Password</label>
              <input
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"
                placeholder="••••••••"
              />
            </div>

            <button
              type="submit"
              disabled={loading}
              className="w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
            >
              {loading ? (
                <>
                  <Loader2 className="h-5 w-5 animate-spin" />
                  <span>Signing in...</span>
                </>
              ) : (
                <div className="flex items-center space-x-2">
                  <LogIn className="h-5 w-5" />
                  <span>Sign In</span>
                </div>
              )}
            </button>
          </form>

          <div className="mt-6 text-center">
            <p className="text-gray-600">
              Don't have an account?{' '}
              <Link to="/signup" className="text-indigo-600 hover:text-indigo-700 font-semibold">
                Sign up
              </Link>
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};
